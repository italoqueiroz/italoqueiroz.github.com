<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Template | Italo Queiroz]]></title>
  <link href="http://italoqueiroz.github.com/blog/categories/template/atom.xml" rel="self"/>
  <link href="http://italoqueiroz.github.com/"/>
  <updated>2012-10-25T15:35:27-02:00</updated>
  <id>http://italoqueiroz.github.com/</id>
  <author>
    <name><![CDATA[Italo Queiroz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Criando templates com HandleBars]]></title>
    <link href="http://italoqueiroz.github.com/blog/2012/10/09/criando-templates-com-handlebars/"/>
    <updated>2012-10-09T17:05:00-03:00</updated>
    <id>http://italoqueiroz.github.com/blog/2012/10/09/criando-templates-com-handlebars</id>
    <content type="html"><![CDATA[<p>Se você querido “manolo” leitor que quando utiliza javascript se “amarra” em misturar lógica com string’s que geram seu html.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Html misturado com a lógica  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="s2">&quot;&lt;div&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;pre&gt;&lt;code&gt;            &amp;lt;ul&amp;gt;</span>
</span><span class='line'><span class="s2">                &amp;lt;li&amp;gt;1&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="s2">                &amp;lt;li&amp;gt;2&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="s2">                &amp;lt;li&amp;gt;3&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="s2">                &amp;lt;li&amp;gt;4&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="s2">            &amp;lt;/ul&amp;gt;</span>
</span><span class='line'><span class="s2">        &amp;lt;/div&amp;gt;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Bizarro :D eu sei     </span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="k">if</span> <span class="p">(</span><span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>   <span class="nx">html</span> <span class="o">+=</span> <span class="s1">&#39;&amp;lt;span&amp;gt; Coisa linda &amp;lt;/span&amp;gt;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#target&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">html</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Venho então lhe propor uma solução que poderá mudar a sua vida de uma vez por todas. <span class="bobagem">(sei que isso foi bem tosco)</span></p>

<p>Desde que comecei a postar tenho falado sobre templates javascript e dentre eles sobre o HandleBars, então pensei em montar este tutorial com o foco apenas em conhecermos o template e como é simples sua implementação.</p>

<p>Começaremos criando uma estrutura de pasta conforme a imagem abaixo. <br />
<img class="center" src="/images/criando_template_handlebars/estrutura.png" width="176"></p>

<p>Na nossa <strong>index.html</strong> criaremos um documento html padrão, adicionando algumas bibliotecas javascript (jQuery  e HandleBars) e com 2 div's, uma com id <strong>table</strong> e outra com id <strong>div</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.html  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE HTML&gt;
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en-US&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>meta charset=&quot;UTF-8&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>title<span class="ni">&amp;gt;&amp;lt;</span>/title<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>div<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>h3<span class="ni">&amp;gt;</span>Template 1 - Table<span class="ni">&amp;lt;</span>/h3<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>div id=&quot;table&quot;<span class="ni">&amp;gt;&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>div<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>h3<span class="ni">&amp;gt;</span>Template 2 - Div<span class="ni">&amp;lt;</span>/h3<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>div id=&quot;div&quot;<span class="ni">&amp;gt;&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- HandleBars Library--&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://cloud.github.com/downloads/wycats/handlebars.js/handlebars-1.0.rc.1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- jQuery Library--&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>E montaremos nossos 2 arquivos de template (table.hb e div.hb) com os seguintes códigos.</p>

<p>
``` html table.hb</p>

<pre><code>&lt;style type="text/css"&gt;
    #tableComponent td{border:1px #000 solid;padding:10px}
&lt;/style&gt;
&lt;table id='tableComponent'&gt;
    {{#each pessoas}}
        &lt;tr&gt;
            &lt;td&gt;{{nome}}&lt;/td&gt;
            &lt;td&gt;{{idade}}&lt;/td&gt;
        &lt;/tr&gt;
    {{/each}}
&lt;/table&gt;
</code></pre>

<p>```
</p>

<p>
``` html div.hb</p>

<pre><code>&lt;style type="text/css"&gt;
    .divComponent div{
        width:100px;
        height:50px;
        padding:10px;
        margin:10px;
        color:#FFF;
        background:#A5BFDD;
        float:left;
}   
&lt;/style&gt;
&lt;div class="divComponent"&gt;
  {{#each pessoas}}
      &lt;div&gt;
      Nome: {{nome}}&lt;br /&gt;
      Idade: {{idade}}
      &lt;/div&gt;
  {{/each}}
&lt;/div&gt;
</code></pre>

<p>```
</p>

<p>Como você deve ter notado, existem elementos que estão entre chaves duplas - { { nome } } – que são usadas sempre que quisermos imprimir o valor de um elemento. Caso estas chaves duplas venham referenciando um bloco de expressão - { { #each pessoas } } - é carregado este helper que pode ser um loop, uma formatação de impressão, condicionais - { { #if pessoas } } - e zas.</p>

<p><strong>**obs: Não existe este espaço entre as chaves como coloquei no texto acima, mas tive que fazer isso por limitação da minha ferramenta de gerenciamento de conteúdo.</strong></p>

<p>Logo abaixo temos o código javascript que faz toda a mágica de chamar nossos templates. Tentarei explicar da melhor forma possível :D. Lembrando que o javascript poderia ter sido bem melhor elaborado, com funções para gerenciar nossos templates, mas achei melhor deixar isso para outro post e não complicar mais as coisas!!!</p>

<p>
``` js JS que chama nossos templates</p>

<pre><code>$(function() {

    /******************************************
     * Carregando o template "table"
     ******************************************/
    //Variável reponsável por guardar o template de "table"
  var tableTemplate = null;
  //Carrega o template de "table";
    $.ajax({
        url: 'table.hb',
        dataType: 'html',
        async: false,
        success: function (template) {
            if (template) {
                tableTemplate = Handlebars.compile(template);
            }
        }
    });
    //Dados que seram passados para o template.
    var context = {"pessoas":[{"nome":"Pedro","idade":23},{"nome":"Kleber","idade":20},{"nome":"Marcos","idade":31}]};
    //Gera o html de acordo com o JSON passado.
    var tableHtml = tableTemplate(context);
    //Seta o html para a div#table, outra opção seria $('#table').html(tableTemplate(context));
    $('#table').html(tableHtml);

    /******************************************
     * Carregando o template "div"
     ******************************************/
    //Variável reponsável por guardar o template de "div"
  var divTemplate = null;
  //Carrega o template de "table";
    $.ajax({
        url: 'div.hb',
        dataType: 'html',
        async: false,
        success: function (template) {
            if (template) {
                divTemplate = Handlebars.compile(template);
            }
        }
    });
    //Gera o html de acordo com o JSON passado (usaremos o mesmo que do template "table").
    var divHtml = divTemplate(context);
    //Seta o html para a div#div, outra opção seria $('#div').html(divTemplate(context));
    $('#div').html(divHtml);
});
</code></pre>

<p>```
</p>

<p>Resumidamente o que precisei fazer foi carregar meus arquivos .hb que poderiam ser qualquer outro tipo de extensão (Ex: table.html, table.italo, table.queiroz), o importante mesmo é o seu conteúdo.</p>

<p>Para carregar e obter o html dos meus templates utilizei a função <strong>$.ajax()</strong> (Linha 9  e linha 32). Após ter a string dos meus arquivos, compilo o mesmo para ser um template HandleBars (Linha 15 e linha 38).</p>

<p>Depois de feito isso é necessário passar um JSON (Linha 20) para o nosso template gerar o html (Linha 22 e linha 43) e logo depois adiciono o html gerado em nossas div's para serem apresentadas no browser.</p>

<h2>Conclusão</h2>

<p>O uso de templates JS ajudam muito na criação e na manutenção de conteúdos dinâmicos, além de prover uma organização, separando as montagens de html da lógica do sistema. Caso seja necessário um designer poderá mexer apenas no arquivo do template para alterar a aparência sem necessariamente ter que editar um arquivo js.</p>

<p>Tentei explicar de forma bem simples o funcionamento do HandleBars, aconselho que você leia a <a href="http://handlebarsjs.com/">documentação</a> para saber o que mais esta engine de template js pode fazer....</p>

<p>Segue o <a href="https://github.com/italoqueiroz/ExemploHandleBars">link</a> no GitHub para download.</p>
]]></content>
  </entry>
  
</feed>
