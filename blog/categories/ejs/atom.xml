<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: EJS | Italo Queiroz]]></title>
  <link href="http://italoqueiroz.github.com/blog/categories/ejs/atom.xml" rel="self"/>
  <link href="http://italoqueiroz.github.com/"/>
  <updated>2013-01-21T13:45:17-02:00</updated>
  <id>http://italoqueiroz.github.com/</id>
  <author>
    <name><![CDATA[Italo Queiroz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HandleBars ou EJS]]></title>
    <link href="http://italoqueiroz.github.com/blog/2012/10/06/handlebars-ou-ejs/"/>
    <updated>2012-10-06T11:00:00-03:00</updated>
    <id>http://italoqueiroz.github.com/blog/2012/10/06/handlebars-ou-ejs</id>
    <content type="html"><![CDATA[<p>Atualmente aqui no trabalho estamos definindo uma framework para o lado cliente (somente HTML e JS) que possa salvar nossas vidas, que seja “componetizada”, de fácil uso e acima de tudo tenha pouca dependência no layout utilizado na página (podendo usar <a href="http://twitter.github.com/bootstrap/">Bootstrap</a>, <a href="http://foundation.zurb.com/">Foundation</a>, <a href="http://960.gs/">960.gs</a> e zas).</p>

<p>
``` js PQP</p>

<pre><code>{{handlebars}}
</code></pre>

<p>```
</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Inativando o cache  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//Exemplo do site da engine HandleBars</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">source</span>   <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#entry-template&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">template</span> <span class="o">=</span> <span class="nx">Handlebars</span><span class="p">.</span><span class="nx">compile</span><span class="p">(</span><span class="nx">source</span><span class="p">);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">context</span> <span class="o">=</span> <span class="p">{</span><span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;My New Post&quot;</span><span class="p">,</span> <span class="nx">body</span><span class="o">:</span> <span class="s2">&quot;This is my first post!&quot;</span><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">html</span>    <span class="o">=</span> <span class="nx">template</span><span class="p">(</span><span class="nx">context</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Em meio a elaboração do projeto nos deparamos com a necessidade de utilizar um template JS, eu já tinha trabalhado com <a href="http://embeddedjs.com/">EJS</a> mas estava fortemente voltado ao <a href="http://handlebarsjs.com/">HandleBars</a> (culpa do <a href="http://italoqueiroz.github.com/blog/2012/10/04/meteor/">Meteor</a>), sendo assim, fui dar uma googlada e percebi que existiam dezenas de engines de template e que o <a href="https://www.linkedin.com/">LinkedIn</a> tinha feito um comparativo com várias opções para definir o que eles usariam na parte de view do site (<a href="http://engineering.linkedin.com/frontend/client-side-templating-throwdown-mustache-handlebars-dustjs-and-more">clique aqui</a> para ver os resultados).</p>

<p>Dentre as opções o HandleBars teve alguns elogios por parte da equipe do LinkedIn e por esse e outros motivos acabamos escolhendo-o. Mesmo sendo uma excelente engine e que também suporta templates do Mustache (que tem uma comunidade enorme) creio que testes de conceito sejam a melhor maneira de averiguar o que atende a sua necessida, assim como fez a equipe do LinkedIn.</p>

<p>Teve um ponto em específico levantado pela nossa equipe que me fizeram pensar 2 vezes antes de apoiar totalmente o HandleBars: “O CACHE”. No EJS para “cachear” um template é estupidamente simples pois já vem nativo já no HandleBars sua implementação é um pouco mais trabalhosa.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Inativando o cache  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//Inativando o cache...</span>
</span><span class='line'><span class="nx">EJS</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span><span class="nx">cache</span><span class="o">:</span> <span class="kc">false</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Mas creio que para saber como funciona esse lance de template JS a melhor opção seja o EJS, é mais tranquilo de trabalhar (com coisas simples), caso a idéia (como é a do nosso framework) seja mexer com vários componentes criando helpers e plugins aconselho o HandleBars por ter uma documentação mais vasta já que ele veio do Mustache.</p>
]]></content>
  </entry>
  
</feed>
